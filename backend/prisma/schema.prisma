generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  username String @unique
  name String
  password String 
  avatar String
  online Boolean @default(false)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  friends User[] @relation("UserFriends")
  friendOf User[] @relation("UserFriends")

  sentRequests FriendRequest[] @relation("SentRequests")
  receivedRequests FriendRequest[] @relation("ReceiverRequests")

  joinedRooms Room[] @relation("Rooms")

  sentMesssages Message[] @relation("sender")

}
model FriendRequest {
  id Int @id @default(autoincrement())

  owner Int 
  friend Int

   sender User @relation("SentRequests" , fields: [owner], references: [id])
    receiver User @relation("ReceiverRequests" , fields: [friend], references: [id])

}


model Room {
id Int @id @default(autoincrement())

type String
members User[] @relation("Rooms")
name String

messages Message[] @relation("bon")

createdAt DateTime @default(now()) @db.Timestamp(6)
}


model Message {
  id Int @id @default(autoincrement())

  content String

  

  senderId Int
  owner User @relation("sender" , fields: [senderId] , references: [id])
  createdAt DateTime @default(now()) @db.Timestamp(6)
  read Boolean

  roomId Int

  room Room @relation("bon" , fields: [roomId] , references: [id])
}